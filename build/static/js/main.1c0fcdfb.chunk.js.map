{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Footer","Content","SubMenu","Menu","App","useState","details","setDetails","fetch","then","res","json","datas","columns","title","dataIndex","key","render","text","ellipsis","data","name","browserName","location","state","device","osName","latitude","country","country_name","ip","IPv4","country_code","postal","mode","theme","Item","icon","MailOutlined","AppstoreOutlined","style","paddingTop","dataSource","backgroundColor","border","borderRadius","color","padding","marginLeft","onClick","method","headers","body","JSON","stringify","document","getElementById","display","id","DingdingOutlined","fontSize","BugOutlined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1c0fcdfb.chunk.js","sourcesContent":["import { Layout, Menu, Table } from 'antd';\nimport { MailOutlined, AppstoreOutlined, DingdingOutlined, BugOutlined } from '@ant-design/icons';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { useState } from 'react';\nimport { browserName, osName } from \"react-device-detect\";\n\nconst { Header, Footer, Content } = Layout;\nconst { SubMenu } = Menu;\n\nfunction App() {\n  // Location details api fetch... \n  const [details, setDetails] = useState([]);\n  fetch(\"https://geolocation-db.com/json/56a44b30-a71d-11eb-8c73-0f972c34e9c0\")\n    .then(res => res.json())\n    .then(datas => setDetails(datas))\n\n\n    const handleSaveInfo = () => {\n      fetch('http://localhost:5000/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type' : 'application/json'\n        },\n        body: JSON.stringify(details)\n      })\n      const success = document.getElementById(\"success\");\n      success.style.display = \"block\";\n    }\n\n  // Table data and UI starts here...\n\n  // UI...\n  const columns = [\n    {\n      title: 'Browser Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: text => <a>{text}</a>,\n      ellipsis: true,\n    },\n    {\n      title: 'Device',\n      dataIndex: 'device',\n      key: 'device',\n      ellipsis: true,\n    },\n    {\n      title: 'Country',\n      dataIndex: 'country',\n      key: 'country',\n      ellipsis: true,\n    },\n    {\n      title: 'Location',\n      dataIndex: 'location',\n      key: 'location',\n      ellipsis: true,\n    },\n    {\n      title: 'Ip Address',\n      dataIndex: 'ip',\n      key: 'ip',\n      ellipsis: true,\n    },\n    {\n      title: 'Postal Code',\n      dataIndex: 'postal',\n      key: 'postal',\n      ellipsis: true,\n    },\n    {\n      title: 'Latitude',\n      dataIndex: 'latitude',\n      key: 'latitude',\n      ellipsis: true,\n    },\n    {\n      title: 'Country_Code',\n      dataIndex: 'country_code',\n      key: 'country_code',\n      ellipsis: true,\n    },\n  ];\n\n  // Data...\n  const data = [\n    {\n      key: '1',\n      name: browserName,\n      location: details.state,\n      device: osName,\n      latitude: details.latitude,\n      country: details.country_name,\n      ip: details.IPv4,\n      country_code: details.country_code,\n      postal: details.postal,\n    }\n  ];\n\n  // Table data an UI ends...\n\n\n  return (\n      <Layout>\n        {/*  Header starts here... */}\n        <Header>\n          <Menu mode=\"horizontal\" theme=\"dark\">\n            {/* Home navigation */}\n            <Menu.Item key=\"\" icon={<MailOutlined />} title=\"Home\">Home</Menu.Item>\n            {/* Career */}\n            <SubMenu key=\"sub1\" title=\"Career\" >\n              <Menu.Item key=\"2\">Front-End Development</Menu.Item>\n              <Menu.Item key=\"3\">Back-End Development</Menu.Item>\n              <Menu.Item key=\"4\">Go</Menu.Item>\n              <Menu.Item key=\"5\">Others</Menu.Item>\n            </SubMenu>\n            {/* Themes */}\n            <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Themes\">\n              <Menu.Item key=\"5\">PSD Templates</Menu.Item>\n              <Menu.Item key=\"6\">Wordpress Theme</Menu.Item>\n              <SubMenu key=\"sub3\" title=\"JavaScript\">\n                <Menu.Item key=\"7\">React</Menu.Item>\n                <Menu.Item key=\"8\"> Angular </Menu.Item>\n              </SubMenu>\n            </SubMenu>\n            {/* About us */}\n            <Menu.Item key=\"2\">About Us</Menu.Item>\n          </Menu>\n        </Header>\n        {/* Header ends here... */}\n\n        {/* Main content starts here... */}\n        <Content>\n          <Table style={{ paddingTop: \"50px\" }} columns={columns} dataSource={data} />\n          <button style={{backgroundColor: \"green\", border: \"1px solid yellow\", borderRadius:\"5px\", color: \"white\", padding: \"5px 20px 5px 20px\", marginLeft: \"48%\" }} onClick={handleSaveInfo}>Save Data</button>\n          <p id=\"success\" style={{ color: \"green\", display: \"none\", marginLeft: \"48%\" }}>Data Saved Succesfully</p>\n        </Content>\n        {/* Main content ends here... */}\n\n        {/* Footer starts here... */}\n        <Footer>\n          <DingdingOutlined style={{ fontSize: '42px', color: \"green\" }} /> <b>Fly to heaven...</b> <BugOutlined style={{ fontSize: '18px', color: \"blue\" }} />\n        </Footer>\n        {/* Footer end here... */}\n      </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}