{"ast":null,"code":"/* jshint node: true */\nvar execFile = require('child_process').execFile;\n\nvar regexRegex = /[-\\/\\\\^$*+?.()|[\\]{}]/g;\n\nfunction escape(string) {\n  return string.replace(regexRegex, '\\\\$&');\n}\n\nmodule.exports = function (iface, callback) {\n  execFile(\"ipconfig\", [\"/all\"], function (err, out) {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    var match = new RegExp(escape(iface)).exec(out);\n\n    if (!match) {\n      callback(\"did not find interface in `ipconfig /all`\", null);\n      return;\n    }\n\n    out = out.substring(match.index + iface.length);\n    match = /[A-Fa-f0-9]{2}(\\-[A-Fa-f0-9]{2}){5}/.exec(out);\n\n    if (!match) {\n      callback(\"did not find a mac address\", null);\n      return;\n    }\n\n    callback(null, match[0].toLowerCase().replace(/\\-/g, ':'));\n  });\n};","map":{"version":3,"sources":["D:/Projects/Interview Task-1 (CircileDiGroup)/client/node_modules/macaddress/lib/platform/getmacaddress_windows.js"],"names":["execFile","require","regexRegex","escape","string","replace","module","exports","iface","callback","err","out","match","RegExp","exec","substring","index","length","toLowerCase"],"mappings":"AAAA;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,QAAxC;;AAEA,IAAIE,UAAU,GAAG,wBAAjB;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACpB,SAAOA,MAAM,CAACC,OAAP,CAAeH,UAAf,EAA2B,MAA3B,CAAP;AACH;;AAEDI,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AACxCT,EAAAA,QAAQ,CAAC,UAAD,EAAa,CAAC,MAAD,CAAb,EAAuB,UAAUU,GAAV,EAAeC,GAAf,EAAoB;AAC/C,QAAID,GAAJ,EAAS;AACLD,MAAAA,QAAQ,CAACC,GAAD,EAAM,IAAN,CAAR;AACA;AACH;;AACD,QAAIE,KAAK,GAAG,IAAIC,MAAJ,CAAWV,MAAM,CAACK,KAAD,CAAjB,EAA0BM,IAA1B,CAA+BH,GAA/B,CAAZ;;AACA,QAAI,CAACC,KAAL,EAAY;AACRH,MAAAA,QAAQ,CAAC,2CAAD,EAA8C,IAA9C,CAAR;AACA;AACH;;AACDE,IAAAA,GAAG,GAAGA,GAAG,CAACI,SAAJ,CAAcH,KAAK,CAACI,KAAN,GAAcR,KAAK,CAACS,MAAlC,CAAN;AACAL,IAAAA,KAAK,GAAG,sCAAsCE,IAAtC,CAA2CH,GAA3C,CAAR;;AACA,QAAI,CAACC,KAAL,EAAY;AACRH,MAAAA,QAAQ,CAAC,4BAAD,EAA+B,IAA/B,CAAR;AACA;AACH;;AACDA,IAAAA,QAAQ,CAAC,IAAD,EAAOG,KAAK,CAAC,CAAD,CAAL,CAASM,WAAT,GAAuBb,OAAvB,CAA+B,KAA/B,EAAsC,GAAtC,CAAP,CAAR;AACH,GAjBO,CAAR;AAkBH,CAnBD","sourcesContent":["/* jshint node: true */\nvar execFile = require('child_process').execFile;\n\nvar regexRegex = /[-\\/\\\\^$*+?.()|[\\]{}]/g;\n\nfunction escape(string) {\n    return string.replace(regexRegex, '\\\\$&');\n}\n\nmodule.exports = function (iface, callback) {\n    execFile(\"ipconfig\", [\"/all\"], function (err, out) {\n        if (err) {\n            callback(err, null);\n            return;\n        }\n        var match = new RegExp(escape(iface)).exec(out);\n        if (!match) {\n            callback(\"did not find interface in `ipconfig /all`\", null);\n            return;\n        }\n        out = out.substring(match.index + iface.length);\n        match = /[A-Fa-f0-9]{2}(\\-[A-Fa-f0-9]{2}){5}/.exec(out);\n        if (!match) {\n            callback(\"did not find a mac address\", null);\n            return;\n        }\n        callback(null, match[0].toLowerCase().replace(/\\-/g, ':'));\n    });\n};\n"]},"metadata":{},"sourceType":"script"}